@page
@model IndexModel
@{
    ViewData["Title"] = "Login Page";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>

    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />

   
    <link href="~/css/login.css" rel="stylesheet" />
    

</head>
<body>

    <!-- Optional Navbar -->
    <nav class="navbar navbar-expand-lg bg-white fixed-top">
        <div class="container-fluid px-4">
            <a class="navbar-brand fw-bold" href="#">ClassroomReservation</a>
            <div>
                <input type="checkbox" class="checkbox" id="themeCheckbox">
                <label for="themeCheckbox" class="checkbox-label">
                    <i class="fas fa-moon"></i>
                    <i class="fas fa-sun"></i>
                    <span class="ball"></span>
                </label>
            </div>
        </div>
    </nav>

    <!-- Login Container -->
    <div class="container d-flex justify-content-center align-items-center vh-100">
        <div class="login-box">
            <!-- Tabs -->
            <div class="role-toggle bg-light border-bottom">
                <div id="instructorTab" class="tab active" onclick="switchRole('instructor')">Instructor Login</div>
                <div id="adminTab" class="tab" onclick="switchRole('admin')">Admin Login</div>
            </div>

            <!-- Forms Wrapper -->
            <div id="formWrapper" class="form-wrapper">                <!-- Instructor Form -->
                <div class="form-container">
                    <h4 class="mb-3 text-center">Instructor Login</h4>
                   
                     <form method="post" asp-page-handler="InstructorLogin">
                        @if (!ViewData.ModelState.IsValid)
                        {
                            <div class="alert alert-danger">
                                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                                {
                                    <p>@error.ErrorMessage</p>
                                }
                            </div>
                        }
                        <div class="mb-3">
                            <input type="email" class="form-control" name="email" placeholder="Email" required />
                        </div>
                        <div class="mb-3">
                            <input type="password" class="form-control" name="password" placeholder="Password" required />
                        </div>
                        <button type="submit" class="btn btn-primary w-100">Login</button>
                    </form>
                </div>

                <!-- Admin Form -->
                <div class="form-container">
                    <h4 class="mb-3 text-center">Admin Login</h4>
                    <form method="post" asp-page-handler="AdminLogin">
                       <div class="mb-3">
                            <input type="text" class="form-control" name="username" placeholder="Username" required />
                        </div>
                        <div class="mb-3">
                            <input type="password" class="form-control" name="password" placeholder="Password" required />
                        </div>
                        <button type="submit" class="btn btn-primary w-100">Login</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        function switchRole(role) {
            const wrapper = document.getElementById("formWrapper");
            const adminTab = document.getElementById("adminTab");
            const instructorTab = document.getElementById("instructorTab");

            if (role === "instructor") {
                wrapper.style.transform = "translateX(0%)";
                instructorTab.classList.add("active");
                adminTab.classList.remove("active");
            } else {
                wrapper.style.transform = "translateX(-50%)";
                adminTab.classList.add("active");
                instructorTab.classList.remove("active");
            } 
        }

        // Sayfa yüklendiğinde tema ayarını uygula
    

    const themeCheckbox = document.getElementById("themeCheckbox");

    // Sayfa yüklendiğinde temayı kontrol et
    window.onload = function () {
        const theme = localStorage.getItem("theme");
        if (theme === "dark") {
            document.body.classList.add("dark");
            themeCheckbox.checked = true;
        }
    };

    // Tema değiştirme işlemi
    themeCheckbox.addEventListener("change", () => {
        document.body.classList.toggle("dark");
        const isDark = document.body.classList.contains("dark");
        localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    </script>

</body>
</html>
