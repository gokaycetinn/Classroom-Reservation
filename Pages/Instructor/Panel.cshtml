@page
@model ClassroomReservation.Pages.Instructor.PanelModel
@{
    ViewData["Title"] = "Instructor Panel";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>

    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/css/Instructor.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js"></script>

    <style>
        .star-rating {
            display: flex;
            flex-direction: row-reverse;
            justify-content: center;
        }

        .star-rating input[type="radio"] {
            display: none;
        }

        .star-rating label {
            font-size: 2rem;
            color: #ddd;
            cursor: pointer;
        }

        .star-rating input[type="radio"]:checked ~ label {
            color: #f5c518;
        }

        .star-rating label:hover,
        .star-rating label:hover ~ label {
            color: #f5c518;
        }
    </style>
</head>

<nav class="navbar navbar-expand-lg bg-white fixed-top">
    <div class="container-fluid px-4">
        <a class="navbar-brand fw-bold" href="#">ClassroomReservation</a>
        <div class="d-flex align-items-center">
            <input type="checkbox" class="checkbox" id="themeCheckbox">
            <label for="themeCheckbox" class="checkbox-label me-3">
                <i class="fas fa-moon"></i>
                <i class="fas fa-sun"></i>
                <span class="ball"></span>
            </label>
           
        <a asp-page="/Index" asp-page-handler="Logout" class="btn btn-danger">Logout</a>        </div>
    </div>
</nav>

<div class="container mt-4">
    @if (TempData["ReservationSuccess"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show mb-4" role="alert">
            @TempData["ReservationSuccess"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    <div class="row">
        <div class="col-md-6"><h5>Submit Reservation Request</h5>            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger alert-dismissible fade show mb-3" role="alert">
                    <ul class="mb-0">
                        @foreach (var modelState in ViewData.ModelState.Values)
                        {
                            foreach (var error in modelState.Errors)
                            {
                                <li>@error.ErrorMessage</li>
                            }
                        }
                    </ul>
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            <form method="post" asp-page-handler="SubmitRequest">
                <div class="mb-3">
                    <label for="semesterSelect">Semester</label>
                    <select id="semesterSelect" name="SelectedSemester" class="form-select" required>
                        <option value="">Select Semester</option>
                        @foreach (var semester in Model.SemesterList)
                        {
                            <option value="@semester.Id" selected="@(ViewData["SelectedSemester"]?.ToString() == semester.Id.ToString())">
                                @semester.Year - @semester.Season
                            </option>
                        }
                    </select>
                </div>
                <div class="mb-3">
                    <label asp-for="NewRequest.ClassroomId"></label>
                    <select asp-for="NewRequest.ClassroomId" class="form-select" required>
                        @foreach (var item in Model.ClassroomList)
                        {
                            <option value="@item.Value" selected="@(ViewData["ClassroomId"]?.ToString() == item.Value)">@item.Text</option>
                        }
                    </select>
                </div>

                <div class="mb-3">
                    <label asp-for="NewRequest.Date"></label>
                    <input asp-for="NewRequest.Date" class="form-control" type="date"
                        min="@DateTime.Today.ToString("yyyy-MM-dd")" 
                        value="@ViewData["Date"]"
                        required />
                </div>

                <div class="mb-3">
                    <label asp-for="NewRequest.StartTime"></label>
                    <input asp-for="NewRequest.StartTime" class="form-control" type="time" 
                        value="@ViewData["StartTime"]"
                        required />
                </div>

                <div class="mb-3">
                    <label asp-for="NewRequest.EndTime"></label>
                    <input asp-for="NewRequest.EndTime" class="form-control" type="time" 
                        value="@ViewData["EndTime"]"
                        required />
                </div>

                <button type="submit" class="btn btn-primary">Submit</button>
            </form>

        </div>

       
          <div class="col-md-6">
            <h5>Contact Us</h5>
            @if (TempData["FeedbackSuccess"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["FeedbackSuccess"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <form method="post" asp-page-handler="SubmitFeedback">
                <div class="mb-3">
                    <label for="feedbackClassroomId">Classroom</label>
                    <select id="feedbackClassroomId" name="NewFeedback.ClassroomId" class="form-control" required>
                        <option value="">Select a classroom</option>
                        @foreach (var classroom in Model.ClassroomList)
                        {
                            <option value="@classroom.Value">@classroom.Text</option>
                        }
                    </select>
                </div>
                <div class="mb-3">
                    <label for="feedbackMessage">Message</label>
                    <textarea id="feedbackMessage" name="NewFeedback.Message" class="form-control" rows="3" required></textarea>
                </div>
                <div class="mb-3">
                    <label for="feedbackRating">Rating</label>
                    <div id="feedbackRating" class="star-rating">
                         @for (int i = 5; i >= 1; i--)
                        {
                            <input type="radio" id="star-@i" name="NewFeedback.Rating" value="@i "required />
                            <label for="star-@i" class="star">&#9733;</label>
                        }

                    </div>
                </div>
                <button type="submit" class="btn btn-primary">Submit Feedback</button>
            </form>
        </div>
    </div>    
    <div class="mt-5">
        <h5>My Reservations</h5>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Classroom</th>
                    <th>Date</th>
                    <th>Time</th>
                    <th>Status</th>
                    <th>Semester</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var reservation in Model.MyReservations)
                {
                    <tr>
                        <td>Room @reservation.ClassroomId</td>
                        <td>@reservation.ReservationDate.ToShortDateString()</td>
                        <td>
                            @if (reservation.StartTime.HasValue && reservation.EndTime.HasValue)
                            {
                                @($"{reservation.StartTime.Value.ToString(@"hh\:mm")} - {reservation.EndTime.Value.ToString(@"hh\:mm")}")
                            }
                        </td>
                        <td>
                            <span class="badge @(reservation.Status == "Approved" ? "bg-success" : 
                                               reservation.Status == "Rejected" ? "bg-danger" : "bg-warning")">
                                @reservation.Status
                            </span>
                        </td>
                        <td>@reservation.SemesterName</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div id="calendar" class="mt-4"></div>

</div>


<div class="modal fade" id="reservationDetailsModal" tabindex="-1" aria-labelledby="reservationDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="reservationDetailsModalLabel">Reservation Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                
                <p><strong>Instructor Id:</strong> <span id="instructorId"></span></p>
                <p><strong>Classroom Id:</strong> <span id="classroomId"></span></p>
                
                
                <p><strong>Status:</strong> <span id="status"></span></p>
                <p><strong>Semester Name:</strong> <span id="semesterName"></span></p>
                <p><strong>Instructor Name:</strong> <span id="instructorName"></span></p>
                
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<script>
    @if (TempData["FeedbackSuccess"] != null)
    {
        <text>
        document.addEventListener('DOMContentLoaded', function() {
            var modal = new bootstrap.Modal(document.getElementById('feedbackSuccessModal'));
            modal.show();
        });
        </text>
    }

    const themeCheckbox = document.getElementById("themeCheckbox");

    window.onload = function () {
        const theme = localStorage.getItem("theme");
        if (theme === "dark") {
            document.body.classList.add("dark");
            themeCheckbox.checked = true;
        }
    };

    themeCheckbox.addEventListener("change", () => {
        document.body.classList.toggle("dark");
        const isDark = document.body.classList.contains("dark");
        localStorage.setItem("theme", isDark ? "dark" : "light");
    });

    document.addEventListener('DOMContentLoaded', function () {
        const startTimeInput = document.getElementById("startTime");
        const endTimeInput = document.getElementById("endTime");
        const reservationForm = document.getElementById("reservationForm");

        if (startTimeInput && endTimeInput) {
            startTimeInput.addEventListener("change", function () {
                const start = this.value;
                endTimeInput.setAttribute("min", start);
            });
        }

        if (reservationForm) {
            reservationForm.addEventListener("submit", async function (e) {
                e.preventDefault();

                const request = {
                    classroomId: document.getElementById("classroomId")?.value,
                    date: document.getElementById("date")?.value,
                    startTime: startTimeInput?.value,
                    endTime: endTimeInput?.value
                };

                const response = await fetch("?handler=AddReservationAjax", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        "RequestVerificationToken": document.querySelector("input[name='__RequestVerificationToken']")?.value || ""
                    },
                    body: JSON.stringify(request)
                });

                const errorDiv = document.getElementById("errorMessage");

                if (!response.ok) {
                    const err = await response.json();
                    errorDiv.textContent = err.error || "An error occurred.";
                    return;
                }

                errorDiv.textContent = "";

                const result = await response.json();

                const newRow = `
                    <tr>
                        <td>${result.classroomName}</td>
                        <td>${new Date(result.date).toLocaleDateString()}</td>
                        <td>${result.startTime}</td>
                        <td>${result.endTime}</td>
                    </tr>`;

                document.getElementById("reservationTable")?.insertAdjacentHTML("beforeend", newRow);

                reservationForm.reset();
            });
        }

        const calendarEl = document.getElementById('calendar');
        const calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'dayGridMonth',
            headerToolbar: {
                left: 'prev,next today',
                center: 'title',
                right: 'dayGridMonth,timeGridWeek'
            },
            eventSources: [
                {
                    url: '/Instructor/Panel?handler=GetReservations',
                    method: 'GET',
                    failure: function() {
                        alert('There was an error while fetching events!');
                    }
                }
            ],
            eventClick: function(info) {
                // Populate modal with event details
                
                document.getElementById('instructorId').textContent = info.event.extendedProps.instructorId;
                document.getElementById('classroomId').textContent = info.event.extendedProps.classroomId;
                
                
                document.getElementById('status').textContent = info.event.extendedProps.status;
                document.getElementById('semesterName').textContent = info.event.extendedProps.semesterName;
                document.getElementById('instructorName').textContent = info.event.extendedProps.instructorName;

                // Show the modal
                const modal = new bootstrap.Modal(document.getElementById('reservationDetailsModal'));
                modal.show();
            }
        });

        calendar.render();
    });
</script>
